# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'cadd7dea-ba67-4922-8f1d-2afbc48b558f'
  imageRepository: 'dnyaneshwargavpythonsamplevscodeflasktutorial'
  containerRegistry: 'mahima.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: '$(containerRegistry)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'

## Add the below snippet at the end of your pipeline
    - task: AzureWebAppContainer@1
      displayName: 'Azure Web App on Container Deploy'
      inputs:
        azureSubscription: 'Mindtree_Azure_DevOps(e9735a76-e0fb-4c01-b485-f95afa5949d0)'
        appName: 'mahima'
        containers: '$(containerRegistry)/$(imageRepository):$(tag)'

    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription: 'Mindtree_Azure_DevOps(e9735a76-e0fb-4c01-b485-f95afa5949d0)'
        appName: 'mahima'
        deployToSlotOrASE: true
        resourceGroupName: 'test'
        slotName: 'staging'
        containers: '$(containerRegistry)/$(imageRepository):$(tag)'

    - task: AzureAppServiceManage@0
      inputs:
        azureSubscription: 'Mindtree_Azure_DevOps(e9735a76-e0fb-4c01-b485-f95afa5949d0)'
        Action: 'Swap Slots'
        WebAppName: 'mahima'
        ResourceGroupName: 'test'
        SourceSlot: 'staging'